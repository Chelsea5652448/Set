#begin van het spel
#kaarten worden geschud en de bovenste 12 kaarten van de stapel 
#(in dit geval de laatste 12 kaarten uit de lijst) worden aan een andere lijst (de tafel) toegevoegd en verwijderd uit de stapel

from PIL import Image
import os
os.chdir('C:/Users\milas\Documents\kaarten')

kaarten_op_tafel=[]
for b in range(12):   #een loop waarin twaalf keer de laatste kaart van de lijst met alle kaarten wordt toegevoegd aan een lijst met kaarten die op tafel liggen en waarbij deze kaart verwijdert wordt uit de lijst met alle kaarten
    kaarten_op_tafel.append(alle_kaarten[-1])
    alle_kaarten.pop()
    bovenste_kaart=alle_kaarten[-1]
    k=''.join(bovenste_kaart)
    img = Image.open(k+'.gif')
    img.show()   #een voor een worden alle 12 bovenste kaarten op het scherm getoond als afbeelding

#code welk alle mogelijke sets vergelijkt en aangeeft welke sets een set zijn.
for i in range(len(kaarten_op_tafel)):
    for j in range(i,len(kaarten_op_tafel)):
        for k in range(j,len(kaarten_op_tafel)):
            if i==j or j==k or i==k:
                pass
            else:
                if check_set(Set(kaarten_op_tafel[i]),Set(kaarten_op_tafel[j]),Set(kaarten_op_tafel[k]))==True:
                    Sets.append([i,j,k])
#als er geen set mogelijk is en alle sets dus leeg blijven is er sprake van een capset.
if Sets==[]:
    print('Dit is een capset')
else: 
    for i in range(len(Sets)):
        for j in range(len(Sets[i])):
            Sets[i][j]+=1
    print('De mogelijke Sets zijn:',Sets)
if Sets!=[]:
    willekeurige_set=random.choice(Sets)
    print('Een willekeurige set is',willekeurige_set)
